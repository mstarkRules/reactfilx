[{"D:\\react\\projects\\reactflix\\src\\index.js":"1","D:\\react\\projects\\reactflix\\src\\App.js":"2","D:\\react\\projects\\reactflix\\src\\Tmbd.js":"3","D:\\react\\projects\\reactflix\\src\\components\\Header\\index.js":"4","D:\\react\\projects\\reactflix\\src\\components\\MovieRow\\index.js":"5","D:\\react\\projects\\reactflix\\src\\components\\FeaturedMovie\\index.js":"6"},{"size":199,"mtime":1611171120870,"results":"7","hashOfConfig":"8"},{"size":2510,"mtime":1611611063416,"results":"9","hashOfConfig":"8"},{"size":2579,"mtime":1611184181598,"results":"10","hashOfConfig":"8"},{"size":761,"mtime":1611510342199,"results":"11","hashOfConfig":"8"},{"size":2325,"mtime":1611615082731,"results":"12","hashOfConfig":"8"},{"size":1965,"mtime":1611508416616,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11byqoi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"D:\\react\\projects\\reactflix\\src\\index.js",[],["31","32"],"D:\\react\\projects\\reactflix\\src\\App.js",["33","34","35"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport MovieRow from './components/MovieRow/';\nimport FeaturedMovie from './components/FeaturedMovie/';\nimport Header from './components/Header/';\n\nimport Tmdb from './Tmbd';\n\nimport { Spinner } from 'react-activity';\nimport 'react-activity/lib/Spinner/Spinner.css';\n\nconst App =()=>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  const loadAll = async ()=>{\n    let list = await Tmdb.getHomeList();\n    setMovieList(list);\n\n    loadFeaturedData(list);\n  }\n\n  const loadFeaturedData = async(list)=>{\n    setLoading(true);\n\n    let originals = list.filter(i=>i.slug === 'originals');\n    let randomChosen = Math.floor(Math.random()* (originals[0].items.results.length - 1 ));\n    let chosen = originals[0].items.results[randomChosen];\n\n    let choseInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n\n    let choseMovieInfo = await Tmdb.getMovieInfo(chosen.id,'movie');\n\n    setFeaturedData(choseInfo);\n\n    setLoading(false);\n  }\n\n  useEffect(()=>{\n\n    loadAll();\n  },[]);\n\n  useEffect(()=>{\n    const scrollListener = ()=>{\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      } else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return ()=>{\n      window.removeEventListener('scroll', scrollListener);\n\n    }\n  },[])\n    \n  return(\n    \n    <div className=\"page\">\n      \n      <Header black={blackHeader}/>\n      {loading &&\n        <div className=\"spinner\">\n          <Spinner\n          \n          />\n        </div>\n        \n      }\n      \n      {featuredData &&\n        <FeaturedMovie\n          item={featuredData}\n        />\n      }\n      {!loading &&\n        <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow\n            key={key}\n            data={item}\n          />\n        ))}\n      </section>\n      }\n      \n      {!loading && \n        <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> por \n        \n        <a className=\"footer--link\" href=\"https://www.linkedin.com/in/marcos-paulo-amorim-b08228160/\"  target=\"_blank\"> MStark</a><br/>\n        Direitos de imagem pertencem a Netflix <br/>\n        Informações base da API do Themoviedb.org \n      </footer>\n      }\n      \n      \n    </div>\n  )\n}\nexport default App;","D:\\react\\projects\\reactflix\\src\\Tmbd.js",["36"],"const API_KEY = '2d8d4346864e27373ba3783d11b4a8c8';\r\n\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\n\r\nconst basicFetch = async(endpoint)=>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async()=>{\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async(movieId, type)=>{\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                default:\r\n                    info = null;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","D:\\react\\projects\\reactflix\\src\\components\\Header\\index.js",["37"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black})=>{\r\n\r\n\r\n\r\n    return(\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://occ-0-2545-3852.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABQazGc8OxX63e1mRo_dG4rnAjvy-KW57vP-CaAUavTsm33zC29Zx30V6AA0Ma8x_nqX7LNVfRMVbpvQzf3xT4C1muU9z.png\" alt=\"Usuário\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","D:\\react\\projects\\reactflix\\src\\components\\MovieRow\\index.js",["38"],"D:\\react\\projects\\reactflix\\src\\components\\FeaturedMovie\\index.js",["39","40"],"import React, {useState, useEffect} from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default({item})=>{\r\n\r\n    const [genres, setGenres] = useState([]);\r\n    console.log('item: ',item);\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n\r\n    \r\n    const loadGenres=()=>{\r\n        let gen = []\r\n        \r\n        for(let i in item.genres){\r\n            gen.push(item.genres[i].name);\r\n        }\r\n        setGenres(gen);\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        loadGenres();\r\n    },[])\r\n    \r\n    \r\n\r\n    return(\r\n        <section className=\"featured\"\r\n            style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition:'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}\r\n        >\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ?'s':''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong> {genres.join(', ')} </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":36,"column":9,"nodeType":"47","messageId":"48","endLine":36,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":46,"column":5,"nodeType":"51","endLine":46,"endColumn":7,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":99,"column":9,"nodeType":"55","endLine":99,"endColumn":120},{"ruleId":"56","severity":1,"message":"57","line":14,"column":1,"nodeType":"58","endLine":78,"endColumn":2},{"ruleId":"56","severity":1,"message":"59","line":4,"column":1,"nodeType":"58","endLine":22,"endColumn":2},{"ruleId":"56","severity":1,"message":"59","line":8,"column":1,"nodeType":"58","endLine":62,"endColumn":2},{"ruleId":"56","severity":1,"message":"59","line":4,"column":1,"nodeType":"58","endLine":55,"endColumn":2},{"ruleId":"49","severity":1,"message":"60","line":24,"column":7,"nodeType":"51","endLine":24,"endColumn":9,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'choseMovieInfo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAll'. Either include it or remove the dependency array.","ArrayExpression",["64"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'loadGenres'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [loadAll]",{"range":"70","text":"71"},"Update the dependencies array to be: [loadGenres]",{"range":"72","text":"73"},[1210,1212],"[loadAll]",[496,498],"[loadGenres]"]