[{"D:\\react\\projects\\reactflix\\src\\index.js":"1","D:\\react\\projects\\reactflix\\src\\App.js":"2","D:\\react\\projects\\reactflix\\src\\Tmbd.js":"3","D:\\react\\projects\\reactflix\\src\\components\\MovieRow\\MovieRow.js":"4","D:\\react\\projects\\reactflix\\src\\components\\FeaturedMovie\\FeaturedMovie.js":"5"},{"size":199,"mtime":1611171120870,"results":"6","hashOfConfig":"7"},{"size":1657,"mtime":1611189982347,"results":"8","hashOfConfig":"7"},{"size":2579,"mtime":1611184181598,"results":"9","hashOfConfig":"7"},{"size":783,"mtime":1611179368628,"results":"10","hashOfConfig":"7"},{"size":1965,"mtime":1611290753744,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"11byqoi",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\projects\\reactflix\\src\\index.js",[],["26","27"],"D:\\react\\projects\\reactflix\\src\\App.js",["28","29"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport MovieRow from './components/MovieRow/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie/FeaturedMovie';\n\nimport Tmdb from './Tmbd';\n\nimport { Spinner } from 'react-activity';\nimport 'react-activity/lib/Spinner/Spinner.css';\n\nconst App =()=>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const loadAll = async ()=>{\n    let list = await Tmdb.getHomeList();\n    setMovieList(list);\n\n    loadFeaturedData(list);\n  }\n\n  const loadFeaturedData = async(list)=>{\n    setLoading(true);\n\n    let originals = list.filter(i=>i.slug === 'originals');\n    let randomChosen = Math.floor(Math.random()* (originals[0].items.results.length - 1 ));\n    let chosen = originals[0].items.results[randomChosen];\n\n    let choseInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n\n    let choseMovieInfo = await Tmdb.getMovieInfo(chosen.id,'movie');\n\n    setFeaturedData(choseInfo);\n\n    setLoading(false);\n  }\n\n  useEffect(()=>{\n\n    loadAll();\n  },[]);\n  \n  return(\n    <div className=\"page\">\n      {loading &&\n        <div className=\"spinner\">\n          <Spinner\n          \n          />\n        </div>\n        \n      }\n      \n      {featuredData &&\n        <FeaturedMovie\n          item={featuredData}\n        />\n      }\n      {!loading &&\n        <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow\n            key={key}\n            data={item}\n          />\n        ))}\n      </section>\n      }\n      \n    </div>\n  )\n}\nexport default App;","D:\\react\\projects\\reactflix\\src\\Tmbd.js",["30"],"const API_KEY = '2d8d4346864e27373ba3783d11b4a8c8';\r\n\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\n\r\nconst basicFetch = async(endpoint)=>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async()=>{\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async(movieId, type)=>{\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                default:\r\n                    info = null;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","D:\\react\\projects\\reactflix\\src\\components\\MovieRow\\MovieRow.js",["31"],"import React from 'react';\r\nimport './MovieRow.css';\r\n\r\nexport default (props)=>{\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{props.data.title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\">\r\n                    {props.data.items.results.length > 0 && props.data.items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} \r\n                                alt={item.original_title}\r\n                            />\r\n                        </div>\r\n                        \r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\projects\\reactflix\\src\\components\\FeaturedMovie\\FeaturedMovie.js",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":34,"column":9,"nodeType":"40","messageId":"41","endLine":34,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":44,"column":5,"nodeType":"44","endLine":44,"endColumn":7,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":14,"column":1,"nodeType":"48","endLine":78,"endColumn":2},{"ruleId":"46","severity":1,"message":"49","line":4,"column":1,"nodeType":"48","endLine":22,"endColumn":2},{"ruleId":"46","severity":1,"message":"49","line":4,"column":1,"nodeType":"48","endLine":55,"endColumn":2},{"ruleId":"42","severity":1,"message":"50","line":24,"column":7,"nodeType":"44","endLine":24,"endColumn":9,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'choseMovieInfo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAll'. Either include it or remove the dependency array.","ArrayExpression",["54"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'loadGenres'. Either include it or remove the dependency array.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [loadAll]",{"range":"60","text":"61"},"Update the dependencies array to be: [loadGenres]",{"range":"62","text":"63"},[1131,1133],"[loadAll]",[496,498],"[loadGenres]"]